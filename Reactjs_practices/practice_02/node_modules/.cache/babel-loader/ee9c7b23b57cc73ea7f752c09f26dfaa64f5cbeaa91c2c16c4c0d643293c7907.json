{"ast":null,"code":"/**\n * Module dependencies.\n */\n\nvar SourceMap = require('source-map').SourceMapGenerator;\nvar SourceMapConsumer = require('source-map').SourceMapConsumer;\nvar sourceMapResolve = require('source-map-resolve');\nvar urix = require('urix');\nvar fs = require('fs');\nvar path = require('path');\n\n/**\n * Expose `mixin()`.\n */\n\nmodule.exports = mixin;\n\n/**\n * Mixin source map support into `compiler`.\n *\n * @param {Compiler} compiler\n * @api public\n */\n\nfunction mixin(compiler) {\n  compiler._comment = compiler.comment;\n  compiler.map = new SourceMap();\n  compiler.position = {\n    line: 1,\n    column: 1\n  };\n  compiler.files = {};\n  for (var k in exports) compiler[k] = exports[k];\n}\n\n/**\n * Update position.\n *\n * @param {String} str\n * @api private\n */\n\nexports.updatePosition = function (str) {\n  var lines = str.match(/\\n/g);\n  if (lines) this.position.line += lines.length;\n  var i = str.lastIndexOf('\\n');\n  this.position.column = ~i ? str.length - i : this.position.column + str.length;\n};\n\n/**\n * Emit `str`.\n *\n * @param {String} str\n * @param {Object} [pos]\n * @return {String}\n * @api private\n */\n\nexports.emit = function (str, pos) {\n  if (pos) {\n    var sourceFile = urix(pos.source || 'source.css');\n    this.map.addMapping({\n      source: sourceFile,\n      generated: {\n        line: this.position.line,\n        column: Math.max(this.position.column - 1, 0)\n      },\n      original: {\n        line: pos.start.line,\n        column: pos.start.column - 1\n      }\n    });\n    this.addFile(sourceFile, pos);\n  }\n  this.updatePosition(str);\n  return str;\n};\n\n/**\n * Adds a file to the source map output if it has not already been added\n * @param {String} file\n * @param {Object} pos\n */\n\nexports.addFile = function (file, pos) {\n  if (typeof pos.content !== 'string') return;\n  if (Object.prototype.hasOwnProperty.call(this.files, file)) return;\n  this.files[file] = pos.content;\n};\n\n/**\n * Applies any original source maps to the output and embeds the source file\n * contents in the source map.\n */\n\nexports.applySourceMaps = function () {\n  Object.keys(this.files).forEach(function (file) {\n    var content = this.files[file];\n    this.map.setSourceContent(file, content);\n    if (this.options.inputSourcemaps !== false) {\n      var originalMap = sourceMapResolve.resolveSync(content, file, fs.readFileSync);\n      if (originalMap) {\n        var map = new SourceMapConsumer(originalMap.map);\n        var relativeTo = originalMap.sourcesRelativeTo;\n        this.map.applySourceMap(map, file, urix(path.dirname(relativeTo)));\n      }\n    }\n  }, this);\n};\n\n/**\n * Process comments, drops sourceMap comments.\n * @param {Object} node\n */\n\nexports.comment = function (node) {\n  if (/^# sourceMappingURL=/.test(node.comment)) return this.emit('', node.position);else return this._comment(node);\n};","map":{"version":3,"names":["SourceMap","require","SourceMapGenerator","SourceMapConsumer","sourceMapResolve","urix","fs","path","module","exports","mixin","compiler","_comment","comment","map","position","line","column","files","k","updatePosition","str","lines","match","length","i","lastIndexOf","emit","pos","sourceFile","source","addMapping","generated","Math","max","original","start","addFile","file","content","Object","prototype","hasOwnProperty","call","applySourceMaps","keys","forEach","setSourceContent","options","inputSourcemaps","originalMap","resolveSync","readFileSync","relativeTo","sourcesRelativeTo","applySourceMap","dirname","node","test"],"sources":["/home/laxus/Uchiha/[GigaCourse.Com] Udemy - React - The Complete Guide (incl Hooks, React Router, Redux)/08 - Time to Practice_ A Complete Practice Project/01-starting-project/node_modules/css/lib/stringify/source-map-support.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar SourceMap = require('source-map').SourceMapGenerator;\nvar SourceMapConsumer = require('source-map').SourceMapConsumer;\nvar sourceMapResolve = require('source-map-resolve');\nvar urix = require('urix');\nvar fs = require('fs');\nvar path = require('path');\n\n/**\n * Expose `mixin()`.\n */\n\nmodule.exports = mixin;\n\n/**\n * Mixin source map support into `compiler`.\n *\n * @param {Compiler} compiler\n * @api public\n */\n\nfunction mixin(compiler) {\n  compiler._comment = compiler.comment;\n  compiler.map = new SourceMap();\n  compiler.position = { line: 1, column: 1 };\n  compiler.files = {};\n  for (var k in exports) compiler[k] = exports[k];\n}\n\n/**\n * Update position.\n *\n * @param {String} str\n * @api private\n */\n\nexports.updatePosition = function(str) {\n  var lines = str.match(/\\n/g);\n  if (lines) this.position.line += lines.length;\n  var i = str.lastIndexOf('\\n');\n  this.position.column = ~i ? str.length - i : this.position.column + str.length;\n};\n\n/**\n * Emit `str`.\n *\n * @param {String} str\n * @param {Object} [pos]\n * @return {String}\n * @api private\n */\n\nexports.emit = function(str, pos) {\n  if (pos) {\n    var sourceFile = urix(pos.source || 'source.css');\n\n    this.map.addMapping({\n      source: sourceFile,\n      generated: {\n        line: this.position.line,\n        column: Math.max(this.position.column - 1, 0)\n      },\n      original: {\n        line: pos.start.line,\n        column: pos.start.column - 1\n      }\n    });\n\n    this.addFile(sourceFile, pos);\n  }\n\n  this.updatePosition(str);\n\n  return str;\n};\n\n/**\n * Adds a file to the source map output if it has not already been added\n * @param {String} file\n * @param {Object} pos\n */\n\nexports.addFile = function(file, pos) {\n  if (typeof pos.content !== 'string') return;\n  if (Object.prototype.hasOwnProperty.call(this.files, file)) return;\n\n  this.files[file] = pos.content;\n};\n\n/**\n * Applies any original source maps to the output and embeds the source file\n * contents in the source map.\n */\n\nexports.applySourceMaps = function() {\n  Object.keys(this.files).forEach(function(file) {\n    var content = this.files[file];\n    this.map.setSourceContent(file, content);\n\n    if (this.options.inputSourcemaps !== false) {\n      var originalMap = sourceMapResolve.resolveSync(\n        content, file, fs.readFileSync);\n      if (originalMap) {\n        var map = new SourceMapConsumer(originalMap.map);\n        var relativeTo = originalMap.sourcesRelativeTo;\n        this.map.applySourceMap(map, file, urix(path.dirname(relativeTo)));\n      }\n    }\n  }, this);\n};\n\n/**\n * Process comments, drops sourceMap comments.\n * @param {Object} node\n */\n\nexports.comment = function(node) {\n  if (/^# sourceMappingURL=/.test(node.comment))\n    return this.emit('', node.position);\n  else\n    return this._comment(node);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}